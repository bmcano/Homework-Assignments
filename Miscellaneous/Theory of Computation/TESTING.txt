From the contents in main.py I have copied what is shown from the terminal after running this program.
Note: both steps 3 and 4 happen at the same time, some of the PDAs generated by the GraphViz are from premade PDAs and some were converted from a CFG. 

Looking at main.py where all the conditions are written up to check inputs and match with these outputs.
Also in this file, I have comments that show where some of the examples come from to help verify the "correctness" of the code.

Step 3: Display a PDA as a GraphViz image (check under /doctest_output/ for graphs)
Step 4: Converting CFGs to PDAs

// PDA1 - pda1.gv.pdf
digraph {
        1 [label=1 shape=circle]
        2 [label=2 shape=circle]
        3 [label=3 shape=circle]
        4 [label=4 shape=circle]
        1 -> 2 [label="•, +!"]
        2 -> 3 [label="•, +S"]
        3 -> 4 [label="•, -!"]
        3 -> 5 [label="•, -S"]
        5 -> 6 [label="•, +A"]
        6 -> 3 [label="•, +b"]
        3 -> 7 [label="•, -S"]
        7 -> 8 [label="•, +"]
        8 -> 3 [label="•, +"]
        3 -> 9 [label="•, -A"]
        9 -> 3 [label="•, +a"]
        3 -> 10 [label="•, -A"]
        10 -> 11 [label="•, +C"]
        11 -> 12 [label="•, +A"]
        12 -> 3 [label="•, +C"]
        3 -> 13 [label="•, -C"]
        13 -> 3 [label="•, +a"]
        3 -> 14 [label="•, -C"]
        14 -> 3 [label="•, +b"]
        3 -> 3 [label="a, -a"]
        3 -> 3 [label="b, -b"]
        Start [shape=point]
        Start -> 1 [arrowhead=normal]
        4 [label=4 shape=doublecircle]
        rankdir=LR
        layout=dot
}

// PDA2 - pda2.gv.pdf
digraph {
        1 [label=1 shape=circle]
        2 [label=2 shape=circle]
        3 [label=3 shape=circle]
        1 -> 2 [label="ε, +L"]
        2 -> 2 [label="(, +X"]
        2 -> 2 [label="), -X"]
        2 -> 3 [label="ε, -L"]
        Start [shape=point]
        Start -> 1 [arrowhead=normal]
        3 [label=3 shape=doublecircle]
        rankdir=LR
        layout=dot
}

// PDA3 - pda3.gv.pdf
digraph {
        1 [label=1 shape=circle]
        2 [label=2 shape=circle]
        3 [label=3 shape=circle]
        4 [label=4 shape=circle]
        1 -> 2 [label="•, +!"]
        2 -> 3 [label="•, +S"]
        3 -> 4 [label="•, -!"]
        3 -> 5 [label="•, -E"]
        5 -> 6 [label="•, +E"]
        6 -> 7 [label="•, ++"]
        7 -> 3 [label="•, +E"]
        3 -> 3 [label="+, -+"]
        Start [shape=point]
        Start -> 1 [arrowhead=normal]
        4 [label=4 shape=doublecircle]
        rankdir=LR
        layout=dot
}

// PDA4 - pda4.gv.pdf
digraph {
        1 [label=1 shape=circle]
        2 [label=2 shape=circle]
        3 [label=3 shape=circle]
        4 [label=4 shape=circle]
        1 -> 2 [label="ε, +L"]
        2 -> 2 [label="a, +X"]
        2 -> 3 [label="ε, *"]
        3 -> 3 [label="b, -X"]
        3 -> 4 [label="ε, -L"]
        Start [shape=point]
        Start -> 1 [arrowhead=normal]
        4 [label=4 shape=doublecircle]
        rankdir=LR
        layout=dot
}


Step 5: Converting CFGs to CNF

Grammer: {'S': ['S S', '( S )', ' ']}
 In CNF: {'S': ['S S', 'A C', 'A B'], 'A': ['('], 'B': [')'], 'C': ['S B']}
Grammer: {'S': ['a S b', ' ']}
 In CNF: {'S': ['A C', 'A B'], 'A': ['a'], 'B': ['b'], 'C': ['S B']}
Grammer: {'S': ['[ S ]', 'S S', ' ']}
 In CNF: {'S': ['A C', 'S S', 'A B'], 'A': ['['], 'B': [']'], 'C': ['S B']}
Grammer: {'S': ['A b', ' '], 'A': ['a', 'C A C'], 'C': ['a', 'b']}
 In CNF: {'S': ['A B'], 'A': ['D', 'C E'], 'C': ['D', 'B'], 'B': ['b'], 'D': ['a'], 'E': ['A C']}
Grammer: {'N': ['B'], 'B': ['s']}
 In CNF: {'N': ['B'], 'B': ['A'], 'A': ['s']}
